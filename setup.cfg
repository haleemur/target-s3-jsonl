[metadata]
name = target-s3-jsonl
version = attr: target_s3_jsonl.__version__
description = Singer.io target for writing JSON Line files and upload to S3
long_description = file: README.md
long_description_content_type = text/markdown
author = Eddy âˆ†
author_email = edrdelta@gmail.com
url = https://github.com/ome9ax/target-s3-jsonl
keywords = target-core, target-s3-jsonl, target-s3-json, singer, singer.io, tap, target, etl, json, jsonl, aws, s3
license = Apache License 2.0
classifiers =
    Development Status :: 2 - Pre-Alpha
    Operating System :: OS Independent
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3

[options]
packages = find:
py_modules = target_s3_jsonl
python_requires = >=3.8
install_requires =
    target-core==0.0.2
include_package_data = True

[options.package_data]
target_s3_jsonl = logging.conf

[options.extras_require]
test =
    pytest-cov
    moto[s3]
lint = flake8
dist =
    setuptools
    wheel
    build
deploy = twine
doc = sphinx-rtd-theme

[options.packages.find]
exclude =
    tests

[options.entry_points]
console_scripts =
    target-s3-jsonl = target_s3_jsonl:main

[tool:pytest]
addopts = -v --cov=target_s3_jsonl --cov-fail-under 95 --cov-report xml --cov-report term --cov-report html:htmlcov --doctest-modules
testpaths = tests
asyncio_mode=auto

[coverage:run]
branch = True
omit =
    venv/*

[coverage:report]
show_missing = True
skip_covered = False

[flake8]
count = True
show-source = True
statistics = True
extend-exclude = venv
ignore = C901
max-line-length = 160
max-complexity = 10

[tox:tox]
# requires = tox-pipenv
envlist = py{39,310,pi}
# labels =
#     test = py{39,310,pi}
#     static = flake8, mypy
# envlist = .virtualenvs/target-s3-jsonl
isolated_build = True
skipsdist = True
# parallel_show_output=True

# requires = tox-pip-extensions
# tox_pip_extensions_ext_venv_update = true

[testenv]
deps = .[test]
commands = pytest

[testenv:lint]
deps=flake8
commands=flake8

[testenv:static]
deps=mypy
commands=mypy

# [build-system]
# requires = [
#     "setuptools>=42",
#     "wheel"
# ]
# build-backend = "setuptools.build_meta"
